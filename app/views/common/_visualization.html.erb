<div class="visualization" id="v-answer">
  <div class="tabs">
    <ul class="tab-links">
        <li class="active"><a href="#world">World</a></li>
        <li><a href="#country">Country</a></li>
        <!-- <li><a href="#city"><%#= answer.user.location.city %></a></li> -->
        <li><a href="#heatmap">Heat Map</a></li>
    </ul>

    <div class="tab-content">
        <div id="world" class="tab active">
          <div id="answer-world" class='answer-chart'></div>
        </div>

        <div id="country" class="tab">
          <div id="answer-country" class='answer-chart'></div>
          <div id="country_position" class="country_dropdown">
            <%= select_tag(@countries_answered, options_for_select(@countries_answered)) %>
          </div>
        </div>

        <% has_city = user_signed_in? ? answer.user.location.city.present? : false %>
        <% if has_city %>
          <div id="city" class="tab">
            <div id="answer-city" class='answer-chart'></div>
          </div>
        <% end %>

        <div id="heatmap" class="tab">
          <div id="map-canvas"></div>
          <div id="heat_position" class="country_dropdown">
            <% temp = answer.user_lat_long %>
              <% @answer_selection = Array.new %>
              <% temp.each do |ans, arr| %>
              <% @answer_selection.push(ans); %>
            <% end %>
            <%= select_tag(@answer_selection, options_for_select(@answer_selection)) %>
          </div>
        </div>
    </div>
  </div>
</div>

<!-- key=AIzaSyDELDDeZFCjRjY4yvz3o0ium-jSwRvnwFY -->
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=visualization"></script>

<script>
  // Heatmap Begin
  var map, pointarray, heatmap, indexComma, latitude, longitude;
  var heatData = [];

  var userLocation = {};

  //array of answers and their respective coordinates per answer
  <% temp = answer.user_lat_long %>
  <% temp.each do |ans, arr| %>
    userLocation[<%= ans.to_json.html_safe %>] = <%= temp[ans].to_json.html_safe %>
  <% end %>

  function createHeat(select){
    heatData = [];
    for(i=0; i<userLocation[select].length; i++){
      indexComma = userLocation[select][i].indexOf(",");
      latitude = Number(userLocation[select][i].substring(0, indexComma-1));
      longitude = Number(userLocation[select][i].substring(indexComma+1, userLocation[select][i].length -1));

      heatData[i] = new google.maps.LatLng(latitude, longitude);
    }
  }

  function initialize() {
    var mapOptions = {
      zoom: 3,
      center: new google.maps.LatLng(Number(<%= answer.center_lat_long()[0].to_json.html_safe %>),  Number(<%= answer.center_lat_long()[1].to_json.html_safe %>)),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    map = new google.maps.Map(document.getElementById('map-canvas'),
        mapOptions);

    pointarray = new google.maps.MVCArray(heatData);

    heatmap = new google.maps.visualization.HeatmapLayer({
      data: pointarray
    });

    heatmap.setMap(map);
  }

  google.maps.event.addDomListener(window, 'load', initialize);
  // Heatmap End

  jQuery(document).ready(function() {
    jQuery('.tabs .tab-links a').on('click', function(e)  {
        var currentAttrValue = jQuery(this).attr('href');

        // Show/Hide Tabs
        jQuery('.tabs ' + currentAttrValue).show().siblings().hide();

        // Change/remove current tab to active
        jQuery(this).parent('li').addClass('active').siblings().removeClass('active');

        e.preventDefault();
        if(currentAttrValue != "#heatmap"){
          show_location_answer(currentAttrValue.substring(1, currentAttrValue.length));
        }
        else{
          google.maps.event.trigger(map, 'resize');
        }
    });
  });

  $('.country_dropdown').change(function (e) {
    var country = $(e.target).find(":selected").val();
    data_answer.country_stats = data_answer.country[country]
    show_location_answer('country');
  });

  //heatmap drop down
  $('#heat_position').change(function (e) {
    var country = $(e.target).find(":selected").val();
    createHeat(country);

    //google.maps.event.addDomListener(window, 'load', initialize);
    initialize();

    //Manually toggle the map twice to refresh the map
    heatmap.setMap(heatmap.getMap() ? null : map);
    heatmap.setMap(heatmap.getMap() ? null : map);
  });

  var data_answer = {};
  <% if answer.question.value_type == "collection" %>
    data_answer.collection = true;
  <% else %>
    data_answer.collection = false;
  <% end %>
  <% if has_city %>
    data_answer.city = <%= answer.data_array('city').html_safe %>;
  <% end %>
  <% if answer.question.value_type == "collection" %>
    data_answer.country = <%= answer.percent_country.to_json.html_safe %>;
  <% else %>
   data_answer.country = <%= answer.numeric_country.to_json.html_safe %>;
  <% end %>
  data_answer.world = <%= answer.data_array('world').html_safe %>;
  data_answer.selected = 'world';

  var chart_answer = c3.generate({
    size: { width: 450,
            height: 450 },
    data: {
      x: data_answer.collection ? null : 'x',
      columns: transform_data_answer(data_answer.selected),
      type: data_answer.collection ? 'donut' : 'bar'
    },
    axis: {
      x: {
        label: {
          text: 'Answer Distribution',
          position: 'outer-center'
        }
      },
      y: {
        label: {
          text: 'Number of Votes',
          position: 'outer-middle'
        }
      }
    },
    tooltip: {
      format: {
        title: function (d) { return null; },
        value: function (value, ratio, id) {
          var sum = data_answer[data_answer.selected].reduce(function(p, c) {
            return p + c[1];
          }, 0);
          return (value / sum * 100).toFixed(1) + '%';
        }
      },
      contents: function (d, defaultTitleFormat, defaultValueFormat, color) {
        d.forEach(function(el){ el.name = el.value })
        return this.getTooltipContent ?
          this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';
      }
    }
  });

  $("#answer-" + data_answer.selected).append(chart_answer.element);

  function transform_data_answer(loc) {
    var data = data_answer[loc];

    if (loc == 'country'){
      data = data_answer.country_stats;
      if(data != null){
        return data;
      }
      else {
        var country = "<%= answer.user_country %>";
        data_answer.country_stats = data_answer.country[country];
        data = data_answer.country_stats;
        return data;
      }
    }
    else{
      if (data_answer.collection) {return data;}
      else {
      data = [['x'], [loc]];
      data_answer[loc].forEach(function(el, i, arr) {
        data[0].push(el[0]);
        data[1].push(el[1]);
      });
      return data;
      }
    }
  }

  function show_location_answer(loc) {
    previous_selected = data_answer.selected;
    data_answer.selected = loc;
    var loc_arr = [];

    if(data_answer.collection){
      for (i = 0; i < transform_data_answer('world').length; i++){
        loc_arr.push(transform_data_answer('world')[i][0])
      }
    } else {
      loc_arr = [previous_selected];
    }

    $("#answer-" + data_answer.selected).append(chart_answer.element);

    chart_answer.load({
      columns: transform_data_answer(loc),
      unload: loc_arr
    });
  }
</script>
